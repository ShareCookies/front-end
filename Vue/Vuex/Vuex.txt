https://vuex.vuejs.org/zh/
https://github.com/vuejs/vuex
案例：
	* https://blog.csdn.net/jingtian678/article/details/81481075
Vuex 是什么：
	Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。	
	hcg：
		把一些数据交给vuex管理。
		进行数据获取
		进行数据修改，   在修改之后，vue会为你的整个项目做更新 ...
		
	注：
		什么情况下应该使用 Vuex：
			虽然 Vuex 可以帮助我们管理共享状态，但也附带了更多的概念和框架。如果您的应用够简单，一个简单的 store 模式就足够您所需了。
			hcg：
				大中型项目中，很多时候都需要在不相关的平行组件之间传递数据.
				并且很多数据需要多个组件循环使用.
				这时就要使用vuex.
状态管理核心:
	状态管理有5个核心，分别是state、getter、mutation、action以及module。
	state:
		状态，就是存在vuex的数据。
		获得状态：
			1.使用Vue.use(Vuex)，在根实例中注册 store 选项，该 store 实例会注入到根组件下的所有子组件中。获得状态：在子组件能直接通过 this.$store 访问到。
			2.在需要使用state的组件中导入store。获得状态：在子组件能直接通过 store.state.count 访问;
			注：
				在计算属性中使用状态，每当 store.state.count 变化的时候, 都会重新求取计算属性，并且触发更新相关联的 DOM。
				
开始

	每一个 Vuex 应用的核心就是 store（仓库）。
	“store”基本上就是一个容器，它包含着你的应用中大部分的状态 (state)。
	Vuex 和单纯的全局对象有以下两点不同：

		1.Vuex 的状态存储是响应式的。
			当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。
		2.你不能直接改变 store 中的状态。
			改变 store 中的状态的唯一途径就是显式地提交 (commit) mutation。
			这样使得我们可以方便地跟踪每一个状态的变化，从而让我们能够实现一些工具帮助我们更好地了解我们的应用。

vuex如何管理状态：
	把组件的共享状态抽取出来，以一个全局单例模式管理。
	在这种模式下，我们的组件树构成了一个巨大的“视图”，不管在树的哪个位置，任何组件都能获取状态或者触发行为。
vuex优势：
	任何组件都能获取状态或者触发行为。
	另外，通过定义和隔离状态管理中的各种概念并强制遵守一定的规则，我们的代码将会变得更结构化且易维护。