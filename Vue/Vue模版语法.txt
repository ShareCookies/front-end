介绍：
	Vue.js 使用了基于 HTML 的模板语法。
	...
插值(数据绑定):
	文本
		文本插值,使用“Mustache”语法 (双大括号) .
		双大括号会将数据解释为普通文本.
		例：
			<span>Message: {{ msg }}</span>
		注：
			v-once 指令，执行一次性地插值，当数据改变时，插值处的内容不会更新。
	原始 HTML:
		使用 v-html 指令.
		将数据解释为HTML 代码。
		 例：
			<span v-html="rawHtml"></span>
		注：
			你的站点上动态渲染的任意 HTML 可能会非常危险，因为它很容易导致 XSS 攻击。
			请只对可信内容使用 HTML 插值，绝不要对用户提供的内容使用插值。


	特性：
		Mustache 语法不能作用在 HTML 特性上，遇到这种情况应该使用 v-bind 指令。！！！
	使用 JavaScript 表达式：
		对于所有的数据绑定，Vue.js 都提供了 JavaScript 表达式支持。
		表达式会在所属 Vue 实例的数据作用域下作为 JavaScript 被解析。
		每个绑定都只能包含单个表达式。
		例：
			{{ ok ? 'YES' : 'NO' }}
	注：
		模板表达式都被放在沙盒中，只能访问全局变量的一个白名单，如 Math 和 Date 。
		你不应该在模板表达式中试图访问用户定义的全局变量。
指令：
	介绍：
		指令 (Directives) 是带有 v- 前缀的特殊特性。
		指令的职责是，当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM。
	参数：
		一些指令能够接收一个“参数”，参数在指令名称之后以冒号表示。
		例：
			<a v-bind:href="url">...</a>
			解析：
				在这里 href 是参数，告知 v-bind 指令将该元素的 href 特性与表达式 url 的值绑定。
			v-on:click="方法"
	动态参数：
	修饰符：
		修饰符 (modifier) 是以半角句号 . 指明的特殊后缀，用于指出一个指令应该以特殊方式绑定。
	缩写：
		v-bind 缩写
			<!-- 完整语法 -->
			<a v-bind:href="url">...</a>
			<!-- 缩写 -->
			<a :href="url">...</a>
		v-on 缩写
			<!-- 完整语法 -->
			<a v-on:click="doSomething">...</a>
			<!-- 缩写 -->
			<a @click="doSomething">...</a>