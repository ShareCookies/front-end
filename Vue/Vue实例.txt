介绍：
	每个 Vue 应用都是通过用 Vue 构造函数创建一个新的 Vue 实例开始的。
	创建一个 Vue 实例时，你可以传入一个选项对象。
特性：
	1. Vue 实例被创建时，它向 Vue 的响应式系统中加入了其 data 对象中能找到的所有的属性。
	 var app = new Vue({
		  data: {
			message: 'Hello'
		  }
		})
		即data对象被添加到Vue实例app中，
		console.log(app.message);//Hello
		注：
			1.实例中来自data的属性是响应式的。
			当这些数据改变时，视图会进行重渲染。
			2.只有当实例被创建时， data 中存在的属性才是响应式的。
			例：
				app.test=11;//这样子添加的属性是无响应式的
	2.Vue 的实例属性与方法：
		除了数据属性，Vue 实例还暴露了一些有用的实例属性与方法。
		它们都有前缀 $，以便与用户定义的属性区分开来。
		查阅完整的实例属性和方法：
			https://cn.vuejs.org/v2/api/#%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7
实例生命周期钩子：
	每个 Vue 实例在被创建时都要经过一系列的初始化过程。
	例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等。
	同时在这个过程中也会运行一些叫做生命周期钩子的函数，这给了用户在不同阶段添加自己的代码的机会。
生命周期图示：