http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html
介绍：
	Flexible Box "弹性布局"，用来为盒状模型提供最大的灵活性。
	2009年，W3C 提出了Flex 布局，可以简便、完整、响应式地实现各种页面布局。
	目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。
使用：
	介绍：
		1.任何一个容器都可以指定为 Flex 布局。
		2.采用 Flex 布局的元素，称为 Flex 容器（flex container,简称"容器"）。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item,简称"项目"）。
		注:设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。
		例:
			.box{
			  display: flex;
			}
			//行内元素也可以使用 Flex 布局。？
			.box{
			  display: inline-flex;
			}
		？
			弹性布局和文档流关系，flex也是脱离了文档流把
	容器：
		轴：
			容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。
				主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；
				交叉轴的开始位置叫做cross start，结束位置叫做cross end。
			项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。
		容器的属性：
			以下6个属性设置在容器上。
			flex-direction：
				flex-direction属性决定主轴的方向（即项目的排列方向）。
				它可能有4个值：
					row（默认值）：主轴为水平方向，起点在左端。
					row-reverse：主轴为水平方向，起点在右端。
					column：主轴为垂直方向，起点在上沿。
					column-reverse：主轴为垂直方向，起点在下沿。
			flex-wrap：
				默认情况下，项目都排在一条线（又称"轴线"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。
				它可能取三个值：
					nowrap（默认）：不换行。
					wrap：换行，第一行在上方。
					wrap-reverse：换行，第一行在下方。
			flex-flow：
				flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。
			justify-content：
				justify-content属性定义了项目在主轴上的对齐方式。
				它可能取5个值：
					具体对齐方式与轴的方向有关。下面假设主轴为从左到右。
					flex-start（默认值）：左对齐
					flex-end：右对齐
					center： 居中
					space-between：两端对齐，项目之间的间隔都相等。
						例：实现左右分布：
							左边一个div,右边一个div,父元素只需要display:flex;justify-content:space-between;

					space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。
			align-items：
				align-items属性定义项目在交叉轴上如何对齐。
				它可能取5个值：
					具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。
					flex-start：交叉轴的起点对齐。
					flex-end：交叉轴的终点对齐。
					center：交叉轴的中点对齐。
					baseline: 项目的第一行文字的基线对齐。
					stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。
			align-content：
				align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。
				该属性可能取6个值：
					flex-start：与交叉轴的起点对齐。
					flex-end：与交叉轴的终点对齐。
					center：与交叉轴的中点对齐。
					space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。
					space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。
					stretch（默认值）：轴线占满整个交叉轴。
					
	项目：
		以下6个属性设置在项目上。
		order：
			order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。
		flex-grow：
			flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。
		flex-shrink：
			flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。
		flex-basis：
			flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。
			例：			
				.item {
				  flex-basis: <length> | auto; /* default auto */
				}
				它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。
		flex：
			flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。
			例：
				.item {
				  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
				}
			附：
				1.该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。
				2.建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。
		align-self：
			align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。
			例:
			.item {
			  align-self: auto | flex-start | flex-end | center | baseline | stretch;
			}
	例：
		.content {
			display: flex;/*该容器为弹性布局*/  
			flex-direction: column; /*容器的项目为列*/  
			justify-content:center; /*justify-content属性定义了项目在主轴上的对齐方式，中心分布*/  
			margin-top: 140rpx; /*https://www.jianshu.com/p/97dc7c4a5ebf*/
		}
附：
	flex换行：
		https://ask.csdn.net/questions/804002
		只要外层容器的 flex-wrap 属性是 warp (默认是 nowarp)，一行被填满就会换行。
		所以只需要插入 width=100% 的一个空盒子，就能达到 br标签的效果。