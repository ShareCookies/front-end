https://cn.vuejs.org/v2/guide/plugins.html

插件通常用来为 Vue 添加全局功能：
	MyPlugin.install = function (Vue, options) {
	  // 1. 添加全局方法或属性
	  Vue.myGlobalMethod = function () {
		// 逻辑...
	  }

	  // 2. 添加全局资源
	  Vue.directive('my-directive', {
		bind (el, binding, vnode, oldVnode) {
		  // 逻辑...
		}
		...
	  })

	  // 3. 注入组件选项
	  Vue.mixin({
		created: function () {
		  // 逻辑...
		}
		...
	  })

	  // 4. 添加实例方法
	  Vue.prototype.$myMethod = function (methodOptions) {
		// 逻辑...
	  }
	}
	
用法：

	1.通过Vue.use(plugin)安装插件。
	通过全局方法 Vue.use() 使用插件。它需要在你调用 new Vue() 启动应用之前完成：

	2.如果插件是一个对象，必须提供 install 方法。
	如果插件是一个函数，它会被作为 install 方法。
	install 方法调用时，会将 Vue 作为参数传入。

	3.该方法需要在调用 new Vue() 之前被调用。

	4.当 install 方法被同一个插件多次调用，插件将只会被安装一次。
	注：
		Vue.js 官方提供的一些插件 (例如 vue-router) 在检测到 Vue 是可访问的全局变量时会自动调用 Vue.use()。
vue.js插件中的全局方法，全局资源和实例方法区别：
	1 全局方法，定义在 Vue 下的静态方法，可通过 Vue.myGlobalMethod 来调用。类似 window. myGlobalMethod。

	2 ？全局资源，示例中即为定义了一个全局指令，具体可参考 vue 的自定义指令章节，并没有什么不同，只是说在你的插件里还定义了一个指令。、
	当然也可定义过滤器等操作，这全看你这个插件要做什么了

	4 实例方法，实例方法可以在组件内部，通过 this.$myMethod 来调用 。
	注：
		涉及到JS 里的类的概念，prototype 原型链含义，建议先看这些基础内容。
		
定义并使用 全局变量，全局函数：
	https://blog.csdn.net/qq_30669833/article/details/81706217
	跟插件概念一样，换种思路而已。