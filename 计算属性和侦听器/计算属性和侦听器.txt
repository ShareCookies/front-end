计算属性：
	前景：
		模板内的表达式非常便利，但是设计它们的初衷是用于简单运算的。
		在模板中放入太多的逻辑会让模板过重且难以维护，所以对于任何复杂逻辑，你都应当使用计算属性。
		注：
			vue是会获取指定元素下的所有dom吗！，如果不是那么是如何完成模版语法解析的。
	介绍：
		计算属性就是Vue的参数中（参数是对象），computed属性（该属性是对象）下的属性（该属性一般是方法）。
		hcg:
			computed计算属性，就是一种属性。
			但他有以下特点：
				1.要用一个方法来定义一个计算属性
				2.计算属性的调用跟普通属性一样（就是跟data属性一样）
				3.当计算属性中使用的普通属性值改变时，计算属性就会被调用以便重新计算，计算属性的值
			注：当计算属性与属性冲突时，属性优先
	例：
		computed.html

	计算属性缓存 vs 方法：
		通过在表达式中调用方法来达到同样的效果：
		例子：
			<p>Reversed message: "{{ reversedMessage() }}"</p>
			// 在组件中
			methods: {
			  reversedMessage: function () {
				return this.message.split('').reverse().join('')
			  }
			}
		计算属性优势：
			不同的是计算属性是基于它们的依赖进行缓存的。只在相关依赖发生改变时它们才会重新求值。
			这就意味着只要 message 还没有发生改变，多次访问 reversedMessage 计算属性会立即返回之前的计算结果，而不必再次执行函数。
	计算属性 vs 侦听属性：
		hcg:
			只要计算属性里使用的属性发生变化，计算属性就会被重新计算。
			
	计算属性的 setter：
	例：
		computed: {
		  fullName: {
			// getter
			get: function () {
			  return this.firstName + ' ' + this.lastName
			},
			// setter
			set: function (newValue) {
			  var names = newValue.split(' ')
			  this.firstName = names[0]
			  this.lastName = names[names.length - 1]
			}
		  }
		}
		现在再运行 vm.fullName = 'John Doe' 时，setter 会被调用，vm.firstName 和 vm.lastName 也会相应地被更新。
侦听器：
	介绍：
		Vue 通过 watch 选项提供了一个更通用的方法，来响应数据的变化。
		当需要在数据变化时执行异步或开销较大的操作时，这个方式是最有用的。
		hcg：
			watch 侦听器，当侦听器方法对应属性发生改变时，侦听器方法就会被调用
		
	例：
		watch.html
、	注：
		除了 watch 选项之外，您还可以使用命令式的 vm.$watch API。！